spring.application.name=dockerdemo
server.port=8777
#server.port=8088
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/testdb
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.flyway.enabled=true
spring.flyway.encoding=utf-8
spring.flyway.locations=classpath:/db
spring.flyway.table=flyway_schema_history
spring.flyway.baseline-version=1
spring.flyway.baseline-on-migrate=true
#flyway:
#enabled: true
#clean-disabled: true
#encoding: UTF-8
#locations: classpath:/db
##  flyway会在库中创建此名称元数据表，用于记录所有版本演化和状态,同一个库不同项目可能冲突，每个项目一张表来记录
#table: flyway_schema_history
#baseline-version: 1 # 基线版本默认开始序号 默认为 1
#baseline-on-migrate: true #  针对非空数据库是否默认调用基线版本,为空的话默认会调用基线版本

# log config
logging.config=classpath:logback.xml
# 调度中心部署跟地址：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"
xxl.job.admin.addresses=http://127.0.0.1:9988/xxl-job-admin
# 执行器"AppName"和地址信息配置：AppName执行器心跳注册分组依据；地址信息用于"调度中心请求并触发任务"和"执行器注册"。执行器默认端口为9999，执行器IP默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用。单机部署多个执行器时，注意要配置不同执行器端口
xxl.job.executor.appname=docker-job
xxl.job.executor.ip=127.0.0.1
xxl.job.executor.port=9999
# 执行器通讯TOKEN，非空时启用
xxl.job.accessToken=
# 执行器运行日志文件存储的磁盘位置，需要对该路径拥有读写权限
xxl.job.executor.logpath=/data/applogs/xxl-job/jobhandler
# 执行器Log文件定期清理功能，指定日志保存天数，日志文件过期自动删除。限制至少保持3天，否则功能不生效；
xxl.job.executor.logretentiondays=-1

